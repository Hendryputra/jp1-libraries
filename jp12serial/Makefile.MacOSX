.SUFFIXES:
.SUFFIXES: .so .cpp .hpp 

GPP = g++
JAVA_INCLUDE = /System/Library/Frameworks/JavaVM.framework/Headers
INCLUDE = -I$(JAVA_INCLUDE)
COPTS = -Wall -shared -fPIC

VERSION=019
LIBNAME=libjp12serial.jnilib
OS=Mac\ OS\ X
DIR_PPC=$(OS)-ppc
DIR_I386=$(OS)-i386
DIR_X86_64=$(OS)-x86_64
TARGET_PPC=$(DIR_PPC)/$(LIBNAME)
TARGET_I386=$(DIR_I386)/$(LIBNAME)
TARGET_X86_64=$(DIR_X86_64)/$(LIBNAME)
DIRDIST=dist
BINDIST=$(DIRDIST)/jp12serial_$(VERSION)_MacOSX.zip
SOURCEDIST=$(DIRDIST)/jp12serial_$(VERSION)_Source.zip
SOURCEDISTFILES=Makefile.Linux Makefile.MacOSX ReadMe.txt src/StdAfx.h src/*.cpp src/*.hpp src/*.h

all: $(TARGET_I386) $(TARGET_X86_64)

dist: $(BINDIST) $(SOURCEDIST)

$(BINDIST): $(TARGET_I386) $(TARGET_X86_64)
	mkdir -p $(DIRDIST)
	zip -r $(BINDIST) $(DIR_I386) $(DIR_X86_64)

$(SOURCEDIST): $(SOURCEDISTFILES)
	mkdir -p $(DIRDIST)
	zip -r $(SOURCEDIST) $(SOURCEDISTFILES)

clean:
	rm $(TARGET_PPC) $(TARGET_I386) $(TARGET_X86_64) $(BINDIST) $(SOURCEDIST) || true
	rmdir $(DIR_PPC) $(DIR_I386) $(DIR_X86_64) $(DIRDIST) || true

$(TARGET_X86_64): src/jp12serial.cpp src/jp12serial.hpp
	mkdir -p $(DIR_X86_64)
	$(GPP) $(INCLUDE) $(COPTS) -arch x86_64 -o $(TARGET_X86_64) src/jp12serial.cpp

$(TARGET_I386): src/jp12serial.cpp src/jp12serial.hpp
	mkdir -p $(DIR_I386)
	$(GPP) $(INCLUDE) $(COPTS) -arch i386 -o $(TARGET_I386) src/jp12serial.cpp

$(TARGET_PPC): src/jp12serial.cpp src/jp12serial.hpp
	mkdir -p $(DIR_PPC)
	$(GPP) $(INCLUDE) $(COPTS) -arch ppc -o $(TARGET_PPC) src/jp12serial.cpp

